#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MANAGER_SALE.DATA_BASE
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="POINT_OF_SALE")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertBUY(BUY instance);
    partial void UpdateBUY(BUY instance);
    partial void DeleteBUY(BUY instance);
    partial void InsertBUY_DETAIL(BUY_DETAIL instance);
    partial void UpdateBUY_DETAIL(BUY_DETAIL instance);
    partial void DeleteBUY_DETAIL(BUY_DETAIL instance);
    partial void InsertCLIENT(CLIENT instance);
    partial void UpdateCLIENT(CLIENT instance);
    partial void DeleteCLIENT(CLIENT instance);
    partial void InsertEMPLOYEES(EMPLOYEES instance);
    partial void UpdateEMPLOYEES(EMPLOYEES instance);
    partial void DeleteEMPLOYEES(EMPLOYEES instance);
    partial void InsertPAYMENT_METHOD(PAYMENT_METHOD instance);
    partial void UpdatePAYMENT_METHOD(PAYMENT_METHOD instance);
    partial void DeletePAYMENT_METHOD(PAYMENT_METHOD instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertPROVIDER(PROVIDER instance);
    partial void UpdatePROVIDER(PROVIDER instance);
    partial void DeletePROVIDER(PROVIDER instance);
    partial void InsertTRANSACTION_DETAIL(TRANSACTION_DETAIL instance);
    partial void UpdateTRANSACTION_DETAIL(TRANSACTION_DETAIL instance);
    partial void DeleteTRANSACTION_DETAIL(TRANSACTION_DETAIL instance);
    partial void InsertTRANSACTION_PAYMENT_DETAIL(TRANSACTION_PAYMENT_DETAIL instance);
    partial void UpdateTRANSACTION_PAYMENT_DETAIL(TRANSACTION_PAYMENT_DETAIL instance);
    partial void DeleteTRANSACTION_PAYMENT_DETAIL(TRANSACTION_PAYMENT_DETAIL instance);
    partial void InsertTRANSACTION_SALE(TRANSACTION_SALE instance);
    partial void UpdateTRANSACTION_SALE(TRANSACTION_SALE instance);
    partial void DeleteTRANSACTION_SALE(TRANSACTION_SALE instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::MANAGER_SALE.Properties.Settings.Default.POINT_OF_SALEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BUY> BUY
		{
			get
			{
				return this.GetTable<BUY>();
			}
		}
		
		public System.Data.Linq.Table<BUY_DETAIL> BUY_DETAIL
		{
			get
			{
				return this.GetTable<BUY_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<CLIENT> CLIENT
		{
			get
			{
				return this.GetTable<CLIENT>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEES> EMPLOYEES
		{
			get
			{
				return this.GetTable<EMPLOYEES>();
			}
		}
		
		public System.Data.Linq.Table<PAYMENT_METHOD> PAYMENT_METHOD
		{
			get
			{
				return this.GetTable<PAYMENT_METHOD>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCT
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<PROVIDER> PROVIDER
		{
			get
			{
				return this.GetTable<PROVIDER>();
			}
		}
		
		public System.Data.Linq.Table<TRANSACTION_DETAIL> TRANSACTION_DETAIL
		{
			get
			{
				return this.GetTable<TRANSACTION_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<TRANSACTION_PAYMENT_DETAIL> TRANSACTION_PAYMENT_DETAIL
		{
			get
			{
				return this.GetTable<TRANSACTION_PAYMENT_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<TRANSACTION_SALE> TRANSACTION_SALE
		{
			get
			{
				return this.GetTable<TRANSACTION_SALE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUY")]
	public partial class BUY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DATE_OF_EXPIRATION;
		
		private int _ID_BUY;
		
		private int _ID_PROVIDER;
		
		private string _DATE_OF_BUY;
		
		private int _QUANTITY_OF_PRODUCT;
		
		private decimal _PURCHASE_COST;
		
		private bool _STATE;
		
		private EntitySet<BUY_DETAIL> _BUY_DETAIL;
		
		private EntityRef<PROVIDER> _PROVIDER;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDATE_OF_EXPIRATIONChanging(string value);
    partial void OnDATE_OF_EXPIRATIONChanged();
    partial void OnID_BUYChanging(int value);
    partial void OnID_BUYChanged();
    partial void OnID_PROVIDERChanging(int value);
    partial void OnID_PROVIDERChanged();
    partial void OnDATE_OF_BUYChanging(string value);
    partial void OnDATE_OF_BUYChanged();
    partial void OnQUANTITY_OF_PRODUCTChanging(int value);
    partial void OnQUANTITY_OF_PRODUCTChanged();
    partial void OnPURCHASE_COSTChanging(decimal value);
    partial void OnPURCHASE_COSTChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    #endregion
		
		public BUY()
		{
			this._BUY_DETAIL = new EntitySet<BUY_DETAIL>(new Action<BUY_DETAIL>(this.attach_BUY_DETAIL), new Action<BUY_DETAIL>(this.detach_BUY_DETAIL));
			this._PROVIDER = default(EntityRef<PROVIDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_OF_EXPIRATION", DbType="NVarChar(MAX)")]
		public string DATE_OF_EXPIRATION
		{
			get
			{
				return this._DATE_OF_EXPIRATION;
			}
			set
			{
				if ((this._DATE_OF_EXPIRATION != value))
				{
					this.OnDATE_OF_EXPIRATIONChanging(value);
					this.SendPropertyChanging();
					this._DATE_OF_EXPIRATION = value;
					this.SendPropertyChanged("DATE_OF_EXPIRATION");
					this.OnDATE_OF_EXPIRATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BUY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_BUY
		{
			get
			{
				return this._ID_BUY;
			}
			set
			{
				if ((this._ID_BUY != value))
				{
					this.OnID_BUYChanging(value);
					this.SendPropertyChanging();
					this._ID_BUY = value;
					this.SendPropertyChanged("ID_BUY");
					this.OnID_BUYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PROVIDER", DbType="Int NOT NULL")]
		public int ID_PROVIDER
		{
			get
			{
				return this._ID_PROVIDER;
			}
			set
			{
				if ((this._ID_PROVIDER != value))
				{
					if (this._PROVIDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PROVIDERChanging(value);
					this.SendPropertyChanging();
					this._ID_PROVIDER = value;
					this.SendPropertyChanged("ID_PROVIDER");
					this.OnID_PROVIDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_OF_BUY", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DATE_OF_BUY
		{
			get
			{
				return this._DATE_OF_BUY;
			}
			set
			{
				if ((this._DATE_OF_BUY != value))
				{
					this.OnDATE_OF_BUYChanging(value);
					this.SendPropertyChanging();
					this._DATE_OF_BUY = value;
					this.SendPropertyChanged("DATE_OF_BUY");
					this.OnDATE_OF_BUYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY_OF_PRODUCT", DbType="Int NOT NULL")]
		public int QUANTITY_OF_PRODUCT
		{
			get
			{
				return this._QUANTITY_OF_PRODUCT;
			}
			set
			{
				if ((this._QUANTITY_OF_PRODUCT != value))
				{
					this.OnQUANTITY_OF_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY_OF_PRODUCT = value;
					this.SendPropertyChanged("QUANTITY_OF_PRODUCT");
					this.OnQUANTITY_OF_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PURCHASE_COST", DbType="Money NOT NULL")]
		public decimal PURCHASE_COST
		{
			get
			{
				return this._PURCHASE_COST;
			}
			set
			{
				if ((this._PURCHASE_COST != value))
				{
					this.OnPURCHASE_COSTChanging(value);
					this.SendPropertyChanging();
					this._PURCHASE_COST = value;
					this.SendPropertyChanged("PURCHASE_COST");
					this.OnPURCHASE_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUY_BUY_DETAIL", Storage="_BUY_DETAIL", ThisKey="ID_BUY", OtherKey="ID_BUY")]
		public EntitySet<BUY_DETAIL> BUY_DETAIL
		{
			get
			{
				return this._BUY_DETAIL;
			}
			set
			{
				this._BUY_DETAIL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROVIDER_BUY", Storage="_PROVIDER", ThisKey="ID_PROVIDER", OtherKey="ID_PROVIDER", IsForeignKey=true)]
		public PROVIDER PROVIDER
		{
			get
			{
				return this._PROVIDER.Entity;
			}
			set
			{
				PROVIDER previousValue = this._PROVIDER.Entity;
				if (((previousValue != value) 
							|| (this._PROVIDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROVIDER.Entity = null;
						previousValue.BUY.Remove(this);
					}
					this._PROVIDER.Entity = value;
					if ((value != null))
					{
						value.BUY.Add(this);
						this._ID_PROVIDER = value.ID_PROVIDER;
					}
					else
					{
						this._ID_PROVIDER = default(int);
					}
					this.SendPropertyChanged("PROVIDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUY_DETAIL(BUY_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.BUY = this;
		}
		
		private void detach_BUY_DETAIL(BUY_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.BUY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUY_DETAIL")]
	public partial class BUY_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_BUY_DETAIL;
		
		private int _ID_BUY;
		
		private int _ID_PRODUCT;
		
		private bool _STATE;
		
		private EntityRef<BUY> _BUY;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BUY_DETAILChanging(int value);
    partial void OnID_BUY_DETAILChanged();
    partial void OnID_BUYChanging(int value);
    partial void OnID_BUYChanged();
    partial void OnID_PRODUCTChanging(int value);
    partial void OnID_PRODUCTChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    #endregion
		
		public BUY_DETAIL()
		{
			this._BUY = default(EntityRef<BUY>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BUY_DETAIL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_BUY_DETAIL
		{
			get
			{
				return this._ID_BUY_DETAIL;
			}
			set
			{
				if ((this._ID_BUY_DETAIL != value))
				{
					this.OnID_BUY_DETAILChanging(value);
					this.SendPropertyChanging();
					this._ID_BUY_DETAIL = value;
					this.SendPropertyChanged("ID_BUY_DETAIL");
					this.OnID_BUY_DETAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BUY", DbType="Int NOT NULL")]
		public int ID_BUY
		{
			get
			{
				return this._ID_BUY;
			}
			set
			{
				if ((this._ID_BUY != value))
				{
					if (this._BUY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BUYChanging(value);
					this.SendPropertyChanging();
					this._ID_BUY = value;
					this.SendPropertyChanged("ID_BUY");
					this.OnID_BUYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Int NOT NULL")]
		public int ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BUY_BUY_DETAIL", Storage="_BUY", ThisKey="ID_BUY", OtherKey="ID_BUY", IsForeignKey=true)]
		public BUY BUY
		{
			get
			{
				return this._BUY.Entity;
			}
			set
			{
				BUY previousValue = this._BUY.Entity;
				if (((previousValue != value) 
							|| (this._BUY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BUY.Entity = null;
						previousValue.BUY_DETAIL.Remove(this);
					}
					this._BUY.Entity = value;
					if ((value != null))
					{
						value.BUY_DETAIL.Add(this);
						this._ID_BUY = value.ID_BUY;
					}
					else
					{
						this._ID_BUY = default(int);
					}
					this.SendPropertyChanged("BUY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_BUY_DETAIL", Storage="_PRODUCT", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.BUY_DETAIL.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.BUY_DETAIL.Add(this);
						this._ID_PRODUCT = value.ID_PRODUCT;
					}
					else
					{
						this._ID_PRODUCT = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENT")]
	public partial class CLIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CLIENT;
		
		private string _NAME;
		
		private string _NIT;
		
		private string _PHONE_NUMBER;
		
		private bool _STATE;
		
		private EntitySet<TRANSACTION_SALE> _TRANSACTION_SALE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CLIENTChanging(int value);
    partial void OnID_CLIENTChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnNITChanging(string value);
    partial void OnNITChanged();
    partial void OnPHONE_NUMBERChanging(string value);
    partial void OnPHONE_NUMBERChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    #endregion
		
		public CLIENT()
		{
			this._TRANSACTION_SALE = new EntitySet<TRANSACTION_SALE>(new Action<TRANSACTION_SALE>(this.attach_TRANSACTION_SALE), new Action<TRANSACTION_SALE>(this.detach_TRANSACTION_SALE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CLIENT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CLIENT
		{
			get
			{
				return this._ID_CLIENT;
			}
			set
			{
				if ((this._ID_CLIENT != value))
				{
					this.OnID_CLIENTChanging(value);
					this.SendPropertyChanging();
					this._ID_CLIENT = value;
					this.SendPropertyChanged("ID_CLIENT");
					this.OnID_CLIENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIT", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NIT
		{
			get
			{
				return this._NIT;
			}
			set
			{
				if ((this._NIT != value))
				{
					this.OnNITChanging(value);
					this.SendPropertyChanging();
					this._NIT = value;
					this.SendPropertyChanged("NIT");
					this.OnNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE_NUMBER", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PHONE_NUMBER
		{
			get
			{
				return this._PHONE_NUMBER;
			}
			set
			{
				if ((this._PHONE_NUMBER != value))
				{
					this.OnPHONE_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._PHONE_NUMBER = value;
					this.SendPropertyChanged("PHONE_NUMBER");
					this.OnPHONE_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_TRANSACTION_SALE", Storage="_TRANSACTION_SALE", ThisKey="ID_CLIENT", OtherKey="ID_CLIENT")]
		public EntitySet<TRANSACTION_SALE> TRANSACTION_SALE
		{
			get
			{
				return this._TRANSACTION_SALE;
			}
			set
			{
				this._TRANSACTION_SALE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRANSACTION_SALE(TRANSACTION_SALE entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_TRANSACTION_SALE(TRANSACTION_SALE entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEES")]
	public partial class EMPLOYEES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_EMPLOYEES;
		
		private string _USER;
		
		private string _PASSWORD;
		
		private bool _SUPERUSER;
		
		private bool _STATE;
		
		private EntitySet<TRANSACTION_SALE> _TRANSACTION_SALE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_EMPLOYEESChanging(int value);
    partial void OnID_EMPLOYEESChanged();
    partial void OnUSERChanging(string value);
    partial void OnUSERChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnSUPERUSERChanging(bool value);
    partial void OnSUPERUSERChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    #endregion
		
		public EMPLOYEES()
		{
			this._TRANSACTION_SALE = new EntitySet<TRANSACTION_SALE>(new Action<TRANSACTION_SALE>(this.attach_TRANSACTION_SALE), new Action<TRANSACTION_SALE>(this.detach_TRANSACTION_SALE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EMPLOYEES", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_EMPLOYEES
		{
			get
			{
				return this._ID_EMPLOYEES;
			}
			set
			{
				if ((this._ID_EMPLOYEES != value))
				{
					this.OnID_EMPLOYEESChanging(value);
					this.SendPropertyChanging();
					this._ID_EMPLOYEES = value;
					this.SendPropertyChanged("ID_EMPLOYEES");
					this.OnID_EMPLOYEESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[USER]", Storage="_USER", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string USER
		{
			get
			{
				return this._USER;
			}
			set
			{
				if ((this._USER != value))
				{
					this.OnUSERChanging(value);
					this.SendPropertyChanging();
					this._USER = value;
					this.SendPropertyChanged("USER");
					this.OnUSERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPERUSER", DbType="Bit NOT NULL")]
		public bool SUPERUSER
		{
			get
			{
				return this._SUPERUSER;
			}
			set
			{
				if ((this._SUPERUSER != value))
				{
					this.OnSUPERUSERChanging(value);
					this.SendPropertyChanging();
					this._SUPERUSER = value;
					this.SendPropertyChanged("SUPERUSER");
					this.OnSUPERUSERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEES_TRANSACTION_SALE", Storage="_TRANSACTION_SALE", ThisKey="ID_EMPLOYEES", OtherKey="ID_EMPLOYEES")]
		public EntitySet<TRANSACTION_SALE> TRANSACTION_SALE
		{
			get
			{
				return this._TRANSACTION_SALE;
			}
			set
			{
				this._TRANSACTION_SALE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRANSACTION_SALE(TRANSACTION_SALE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = this;
		}
		
		private void detach_TRANSACTION_SALE(TRANSACTION_SALE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAYMENT_METHOD")]
	public partial class PAYMENT_METHOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PAYMENT;
		
		private string _METHOD;
		
		private bool _STATE;
		
		private EntitySet<TRANSACTION_PAYMENT_DETAIL> _TRANSACTION_PAYMENT_DETAIL;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PAYMENTChanging(int value);
    partial void OnID_PAYMENTChanged();
    partial void OnMETHODChanging(string value);
    partial void OnMETHODChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    #endregion
		
		public PAYMENT_METHOD()
		{
			this._TRANSACTION_PAYMENT_DETAIL = new EntitySet<TRANSACTION_PAYMENT_DETAIL>(new Action<TRANSACTION_PAYMENT_DETAIL>(this.attach_TRANSACTION_PAYMENT_DETAIL), new Action<TRANSACTION_PAYMENT_DETAIL>(this.detach_TRANSACTION_PAYMENT_DETAIL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PAYMENT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PAYMENT
		{
			get
			{
				return this._ID_PAYMENT;
			}
			set
			{
				if ((this._ID_PAYMENT != value))
				{
					this.OnID_PAYMENTChanging(value);
					this.SendPropertyChanging();
					this._ID_PAYMENT = value;
					this.SendPropertyChanged("ID_PAYMENT");
					this.OnID_PAYMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_METHOD", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string METHOD
		{
			get
			{
				return this._METHOD;
			}
			set
			{
				if ((this._METHOD != value))
				{
					this.OnMETHODChanging(value);
					this.SendPropertyChanging();
					this._METHOD = value;
					this.SendPropertyChanged("METHOD");
					this.OnMETHODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYMENT_METHOD_TRANSACTION_PAYMENT_DETAIL", Storage="_TRANSACTION_PAYMENT_DETAIL", ThisKey="ID_PAYMENT", OtherKey="ID_PAYMENT")]
		public EntitySet<TRANSACTION_PAYMENT_DETAIL> TRANSACTION_PAYMENT_DETAIL
		{
			get
			{
				return this._TRANSACTION_PAYMENT_DETAIL;
			}
			set
			{
				this._TRANSACTION_PAYMENT_DETAIL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRANSACTION_PAYMENT_DETAIL(TRANSACTION_PAYMENT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PAYMENT_METHOD = this;
		}
		
		private void detach_TRANSACTION_PAYMENT_DETAIL(TRANSACTION_PAYMENT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PAYMENT_METHOD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PRODUCT;
		
		private string _CODE;
		
		private string _NAME;
		
		private string _DESCRIPTION;
		
		private decimal _PRICE_COST;
		
		private System.Nullable<decimal> _PRICE_SALE;
		
		private int _STOCK;
		
		private bool _STATE;
		
		private string _TRADEMARK;
		
		private EntitySet<BUY_DETAIL> _BUY_DETAIL;
		
		private EntitySet<TRANSACTION_DETAIL> _TRANSACTION_DETAIL;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PRODUCTChanging(int value);
    partial void OnID_PRODUCTChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnPRICE_COSTChanging(decimal value);
    partial void OnPRICE_COSTChanged();
    partial void OnPRICE_SALEChanging(System.Nullable<decimal> value);
    partial void OnPRICE_SALEChanged();
    partial void OnSTOCKChanging(int value);
    partial void OnSTOCKChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    partial void OnTRADEMARKChanging(string value);
    partial void OnTRADEMARKChanged();
    #endregion
		
		public PRODUCT()
		{
			this._BUY_DETAIL = new EntitySet<BUY_DETAIL>(new Action<BUY_DETAIL>(this.attach_BUY_DETAIL), new Action<BUY_DETAIL>(this.detach_BUY_DETAIL));
			this._TRANSACTION_DETAIL = new EntitySet<TRANSACTION_DETAIL>(new Action<TRANSACTION_DETAIL>(this.attach_TRANSACTION_DETAIL), new Action<TRANSACTION_DETAIL>(this.detach_TRANSACTION_DETAIL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_COST", DbType="Money NOT NULL")]
		public decimal PRICE_COST
		{
			get
			{
				return this._PRICE_COST;
			}
			set
			{
				if ((this._PRICE_COST != value))
				{
					this.OnPRICE_COSTChanging(value);
					this.SendPropertyChanging();
					this._PRICE_COST = value;
					this.SendPropertyChanged("PRICE_COST");
					this.OnPRICE_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_SALE", DbType="Money")]
		public System.Nullable<decimal> PRICE_SALE
		{
			get
			{
				return this._PRICE_SALE;
			}
			set
			{
				if ((this._PRICE_SALE != value))
				{
					this.OnPRICE_SALEChanging(value);
					this.SendPropertyChanging();
					this._PRICE_SALE = value;
					this.SendPropertyChanged("PRICE_SALE");
					this.OnPRICE_SALEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK", DbType="Int NOT NULL")]
		public int STOCK
		{
			get
			{
				return this._STOCK;
			}
			set
			{
				if ((this._STOCK != value))
				{
					this.OnSTOCKChanging(value);
					this.SendPropertyChanging();
					this._STOCK = value;
					this.SendPropertyChanged("STOCK");
					this.OnSTOCKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRADEMARK", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TRADEMARK
		{
			get
			{
				return this._TRADEMARK;
			}
			set
			{
				if ((this._TRADEMARK != value))
				{
					this.OnTRADEMARKChanging(value);
					this.SendPropertyChanging();
					this._TRADEMARK = value;
					this.SendPropertyChanged("TRADEMARK");
					this.OnTRADEMARKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_BUY_DETAIL", Storage="_BUY_DETAIL", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT")]
		public EntitySet<BUY_DETAIL> BUY_DETAIL
		{
			get
			{
				return this._BUY_DETAIL;
			}
			set
			{
				this._BUY_DETAIL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_TRANSACTION_DETAIL", Storage="_TRANSACTION_DETAIL", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT")]
		public EntitySet<TRANSACTION_DETAIL> TRANSACTION_DETAIL
		{
			get
			{
				return this._TRANSACTION_DETAIL;
			}
			set
			{
				this._TRANSACTION_DETAIL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUY_DETAIL(BUY_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_BUY_DETAIL(BUY_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
		
		private void attach_TRANSACTION_DETAIL(TRANSACTION_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_TRANSACTION_DETAIL(TRANSACTION_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROVIDER")]
	public partial class PROVIDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PROVIDER;
		
		private string _COMPANY;
		
		private string _REPRESENTATIVE;
		
		private string _CONTACT_INFORMATION;
		
		private bool _STATE;
		
		private EntitySet<BUY> _BUY;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PROVIDERChanging(int value);
    partial void OnID_PROVIDERChanged();
    partial void OnCOMPANYChanging(string value);
    partial void OnCOMPANYChanged();
    partial void OnREPRESENTATIVEChanging(string value);
    partial void OnREPRESENTATIVEChanged();
    partial void OnCONTACT_INFORMATIONChanging(string value);
    partial void OnCONTACT_INFORMATIONChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    #endregion
		
		public PROVIDER()
		{
			this._BUY = new EntitySet<BUY>(new Action<BUY>(this.attach_BUY), new Action<BUY>(this.detach_BUY));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PROVIDER", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PROVIDER
		{
			get
			{
				return this._ID_PROVIDER;
			}
			set
			{
				if ((this._ID_PROVIDER != value))
				{
					this.OnID_PROVIDERChanging(value);
					this.SendPropertyChanging();
					this._ID_PROVIDER = value;
					this.SendPropertyChanged("ID_PROVIDER");
					this.OnID_PROVIDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string COMPANY
		{
			get
			{
				return this._COMPANY;
			}
			set
			{
				if ((this._COMPANY != value))
				{
					this.OnCOMPANYChanging(value);
					this.SendPropertyChanging();
					this._COMPANY = value;
					this.SendPropertyChanged("COMPANY");
					this.OnCOMPANYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REPRESENTATIVE", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string REPRESENTATIVE
		{
			get
			{
				return this._REPRESENTATIVE;
			}
			set
			{
				if ((this._REPRESENTATIVE != value))
				{
					this.OnREPRESENTATIVEChanging(value);
					this.SendPropertyChanging();
					this._REPRESENTATIVE = value;
					this.SendPropertyChanged("REPRESENTATIVE");
					this.OnREPRESENTATIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_INFORMATION", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CONTACT_INFORMATION
		{
			get
			{
				return this._CONTACT_INFORMATION;
			}
			set
			{
				if ((this._CONTACT_INFORMATION != value))
				{
					this.OnCONTACT_INFORMATIONChanging(value);
					this.SendPropertyChanging();
					this._CONTACT_INFORMATION = value;
					this.SendPropertyChanged("CONTACT_INFORMATION");
					this.OnCONTACT_INFORMATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROVIDER_BUY", Storage="_BUY", ThisKey="ID_PROVIDER", OtherKey="ID_PROVIDER")]
		public EntitySet<BUY> BUY
		{
			get
			{
				return this._BUY;
			}
			set
			{
				this._BUY.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUY(BUY entity)
		{
			this.SendPropertyChanging();
			entity.PROVIDER = this;
		}
		
		private void detach_BUY(BUY entity)
		{
			this.SendPropertyChanging();
			entity.PROVIDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANSACTION_DETAIL")]
	public partial class TRANSACTION_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TRANSACTION_DETAIL;
		
		private int _ID_PRODUCT;
		
		private int _ID_TRANSACTION;
		
		private int _QUANTITY;
		
		private decimal _PRICE;
		
		private bool _STATE;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
		private EntityRef<TRANSACTION_SALE> _TRANSACTION_SALE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TRANSACTION_DETAILChanging(int value);
    partial void OnID_TRANSACTION_DETAILChanged();
    partial void OnID_PRODUCTChanging(int value);
    partial void OnID_PRODUCTChanged();
    partial void OnID_TRANSACTIONChanging(int value);
    partial void OnID_TRANSACTIONChanged();
    partial void OnQUANTITYChanging(int value);
    partial void OnQUANTITYChanged();
    partial void OnPRICEChanging(decimal value);
    partial void OnPRICEChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    #endregion
		
		public TRANSACTION_DETAIL()
		{
			this._PRODUCT = default(EntityRef<PRODUCT>);
			this._TRANSACTION_SALE = default(EntityRef<TRANSACTION_SALE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TRANSACTION_DETAIL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TRANSACTION_DETAIL
		{
			get
			{
				return this._ID_TRANSACTION_DETAIL;
			}
			set
			{
				if ((this._ID_TRANSACTION_DETAIL != value))
				{
					this.OnID_TRANSACTION_DETAILChanging(value);
					this.SendPropertyChanging();
					this._ID_TRANSACTION_DETAIL = value;
					this.SendPropertyChanged("ID_TRANSACTION_DETAIL");
					this.OnID_TRANSACTION_DETAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Int NOT NULL")]
		public int ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TRANSACTION", DbType="Int NOT NULL")]
		public int ID_TRANSACTION
		{
			get
			{
				return this._ID_TRANSACTION;
			}
			set
			{
				if ((this._ID_TRANSACTION != value))
				{
					if (this._TRANSACTION_SALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TRANSACTIONChanging(value);
					this.SendPropertyChanging();
					this._ID_TRANSACTION = value;
					this.SendPropertyChanged("ID_TRANSACTION");
					this.OnID_TRANSACTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Money NOT NULL")]
		public decimal PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_TRANSACTION_DETAIL", Storage="_PRODUCT", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.TRANSACTION_DETAIL.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.TRANSACTION_DETAIL.Add(this);
						this._ID_PRODUCT = value.ID_PRODUCT;
					}
					else
					{
						this._ID_PRODUCT = default(int);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSACTION_SALE_TRANSACTION_DETAIL", Storage="_TRANSACTION_SALE", ThisKey="ID_TRANSACTION", OtherKey="ID_TRANSACTION", IsForeignKey=true)]
		public TRANSACTION_SALE TRANSACTION_SALE
		{
			get
			{
				return this._TRANSACTION_SALE.Entity;
			}
			set
			{
				TRANSACTION_SALE previousValue = this._TRANSACTION_SALE.Entity;
				if (((previousValue != value) 
							|| (this._TRANSACTION_SALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRANSACTION_SALE.Entity = null;
						previousValue.TRANSACTION_DETAIL.Remove(this);
					}
					this._TRANSACTION_SALE.Entity = value;
					if ((value != null))
					{
						value.TRANSACTION_DETAIL.Add(this);
						this._ID_TRANSACTION = value.ID_TRANSACTION;
					}
					else
					{
						this._ID_TRANSACTION = default(int);
					}
					this.SendPropertyChanged("TRANSACTION_SALE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANSACTION_PAYMENT_DETAIL")]
	public partial class TRANSACTION_PAYMENT_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TRANSACTION_PAYMENT_DETAIL;
		
		private int _ID_PAYMENT;
		
		private int _ID_TRANSACTION;
		
		private decimal _TRANSACTION_AMOUNT;
		
		private bool _STATE;
		
		private EntityRef<PAYMENT_METHOD> _PAYMENT_METHOD;
		
		private EntityRef<TRANSACTION_SALE> _TRANSACTION_SALE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TRANSACTION_PAYMENT_DETAILChanging(int value);
    partial void OnID_TRANSACTION_PAYMENT_DETAILChanged();
    partial void OnID_PAYMENTChanging(int value);
    partial void OnID_PAYMENTChanged();
    partial void OnID_TRANSACTIONChanging(int value);
    partial void OnID_TRANSACTIONChanged();
    partial void OnTRANSACTION_AMOUNTChanging(decimal value);
    partial void OnTRANSACTION_AMOUNTChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    #endregion
		
		public TRANSACTION_PAYMENT_DETAIL()
		{
			this._PAYMENT_METHOD = default(EntityRef<PAYMENT_METHOD>);
			this._TRANSACTION_SALE = default(EntityRef<TRANSACTION_SALE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TRANSACTION_PAYMENT_DETAIL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TRANSACTION_PAYMENT_DETAIL
		{
			get
			{
				return this._ID_TRANSACTION_PAYMENT_DETAIL;
			}
			set
			{
				if ((this._ID_TRANSACTION_PAYMENT_DETAIL != value))
				{
					this.OnID_TRANSACTION_PAYMENT_DETAILChanging(value);
					this.SendPropertyChanging();
					this._ID_TRANSACTION_PAYMENT_DETAIL = value;
					this.SendPropertyChanged("ID_TRANSACTION_PAYMENT_DETAIL");
					this.OnID_TRANSACTION_PAYMENT_DETAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PAYMENT", DbType="Int NOT NULL")]
		public int ID_PAYMENT
		{
			get
			{
				return this._ID_PAYMENT;
			}
			set
			{
				if ((this._ID_PAYMENT != value))
				{
					if (this._PAYMENT_METHOD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PAYMENTChanging(value);
					this.SendPropertyChanging();
					this._ID_PAYMENT = value;
					this.SendPropertyChanged("ID_PAYMENT");
					this.OnID_PAYMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TRANSACTION", DbType="Int NOT NULL")]
		public int ID_TRANSACTION
		{
			get
			{
				return this._ID_TRANSACTION;
			}
			set
			{
				if ((this._ID_TRANSACTION != value))
				{
					if (this._TRANSACTION_SALE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TRANSACTIONChanging(value);
					this.SendPropertyChanging();
					this._ID_TRANSACTION = value;
					this.SendPropertyChanged("ID_TRANSACTION");
					this.OnID_TRANSACTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANSACTION_AMOUNT", DbType="Money NOT NULL")]
		public decimal TRANSACTION_AMOUNT
		{
			get
			{
				return this._TRANSACTION_AMOUNT;
			}
			set
			{
				if ((this._TRANSACTION_AMOUNT != value))
				{
					this.OnTRANSACTION_AMOUNTChanging(value);
					this.SendPropertyChanging();
					this._TRANSACTION_AMOUNT = value;
					this.SendPropertyChanged("TRANSACTION_AMOUNT");
					this.OnTRANSACTION_AMOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAYMENT_METHOD_TRANSACTION_PAYMENT_DETAIL", Storage="_PAYMENT_METHOD", ThisKey="ID_PAYMENT", OtherKey="ID_PAYMENT", IsForeignKey=true)]
		public PAYMENT_METHOD PAYMENT_METHOD
		{
			get
			{
				return this._PAYMENT_METHOD.Entity;
			}
			set
			{
				PAYMENT_METHOD previousValue = this._PAYMENT_METHOD.Entity;
				if (((previousValue != value) 
							|| (this._PAYMENT_METHOD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAYMENT_METHOD.Entity = null;
						previousValue.TRANSACTION_PAYMENT_DETAIL.Remove(this);
					}
					this._PAYMENT_METHOD.Entity = value;
					if ((value != null))
					{
						value.TRANSACTION_PAYMENT_DETAIL.Add(this);
						this._ID_PAYMENT = value.ID_PAYMENT;
					}
					else
					{
						this._ID_PAYMENT = default(int);
					}
					this.SendPropertyChanged("PAYMENT_METHOD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSACTION_SALE_TRANSACTION_PAYMENT_DETAIL", Storage="_TRANSACTION_SALE", ThisKey="ID_TRANSACTION", OtherKey="ID_TRANSACTION", IsForeignKey=true)]
		public TRANSACTION_SALE TRANSACTION_SALE
		{
			get
			{
				return this._TRANSACTION_SALE.Entity;
			}
			set
			{
				TRANSACTION_SALE previousValue = this._TRANSACTION_SALE.Entity;
				if (((previousValue != value) 
							|| (this._TRANSACTION_SALE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRANSACTION_SALE.Entity = null;
						previousValue.TRANSACTION_PAYMENT_DETAIL.Remove(this);
					}
					this._TRANSACTION_SALE.Entity = value;
					if ((value != null))
					{
						value.TRANSACTION_PAYMENT_DETAIL.Add(this);
						this._ID_TRANSACTION = value.ID_TRANSACTION;
					}
					else
					{
						this._ID_TRANSACTION = default(int);
					}
					this.SendPropertyChanged("TRANSACTION_SALE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANSACTION_SALE")]
	public partial class TRANSACTION_SALE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TRANSACTION;
		
		private int _ID_CLIENT;
		
		private int _ID_EMPLOYEES;
		
		private string _DATE;
		
		private string _TIME;
		
		private decimal _TOTAL;
		
		private bool _STATE;
		
		private EntitySet<TRANSACTION_DETAIL> _TRANSACTION_DETAIL;
		
		private EntitySet<TRANSACTION_PAYMENT_DETAIL> _TRANSACTION_PAYMENT_DETAIL;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<EMPLOYEES> _EMPLOYEES;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TRANSACTIONChanging(int value);
    partial void OnID_TRANSACTIONChanged();
    partial void OnID_CLIENTChanging(int value);
    partial void OnID_CLIENTChanged();
    partial void OnID_EMPLOYEESChanging(int value);
    partial void OnID_EMPLOYEESChanged();
    partial void OnDATEChanging(string value);
    partial void OnDATEChanged();
    partial void OnTIMEChanging(string value);
    partial void OnTIMEChanged();
    partial void OnTOTALChanging(decimal value);
    partial void OnTOTALChanged();
    partial void OnSTATEChanging(bool value);
    partial void OnSTATEChanged();
    #endregion
		
		public TRANSACTION_SALE()
		{
			this._TRANSACTION_DETAIL = new EntitySet<TRANSACTION_DETAIL>(new Action<TRANSACTION_DETAIL>(this.attach_TRANSACTION_DETAIL), new Action<TRANSACTION_DETAIL>(this.detach_TRANSACTION_DETAIL));
			this._TRANSACTION_PAYMENT_DETAIL = new EntitySet<TRANSACTION_PAYMENT_DETAIL>(new Action<TRANSACTION_PAYMENT_DETAIL>(this.attach_TRANSACTION_PAYMENT_DETAIL), new Action<TRANSACTION_PAYMENT_DETAIL>(this.detach_TRANSACTION_PAYMENT_DETAIL));
			this._CLIENT = default(EntityRef<CLIENT>);
			this._EMPLOYEES = default(EntityRef<EMPLOYEES>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TRANSACTION", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TRANSACTION
		{
			get
			{
				return this._ID_TRANSACTION;
			}
			set
			{
				if ((this._ID_TRANSACTION != value))
				{
					this.OnID_TRANSACTIONChanging(value);
					this.SendPropertyChanging();
					this._ID_TRANSACTION = value;
					this.SendPropertyChanged("ID_TRANSACTION");
					this.OnID_TRANSACTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CLIENT", DbType="Int NOT NULL")]
		public int ID_CLIENT
		{
			get
			{
				return this._ID_CLIENT;
			}
			set
			{
				if ((this._ID_CLIENT != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CLIENTChanging(value);
					this.SendPropertyChanging();
					this._ID_CLIENT = value;
					this.SendPropertyChanged("ID_CLIENT");
					this.OnID_CLIENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EMPLOYEES", DbType="Int NOT NULL")]
		public int ID_EMPLOYEES
		{
			get
			{
				return this._ID_EMPLOYEES;
			}
			set
			{
				if ((this._ID_EMPLOYEES != value))
				{
					if (this._EMPLOYEES.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_EMPLOYEESChanging(value);
					this.SendPropertyChanging();
					this._ID_EMPLOYEES = value;
					this.SendPropertyChanged("ID_EMPLOYEES");
					this.OnID_EMPLOYEESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIME", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string TIME
		{
			get
			{
				return this._TIME;
			}
			set
			{
				if ((this._TIME != value))
				{
					this.OnTIMEChanging(value);
					this.SendPropertyChanging();
					this._TIME = value;
					this.SendPropertyChanged("TIME");
					this.OnTIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Money NOT NULL")]
		public decimal TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="Bit NOT NULL")]
		public bool STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSACTION_SALE_TRANSACTION_DETAIL", Storage="_TRANSACTION_DETAIL", ThisKey="ID_TRANSACTION", OtherKey="ID_TRANSACTION")]
		public EntitySet<TRANSACTION_DETAIL> TRANSACTION_DETAIL
		{
			get
			{
				return this._TRANSACTION_DETAIL;
			}
			set
			{
				this._TRANSACTION_DETAIL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANSACTION_SALE_TRANSACTION_PAYMENT_DETAIL", Storage="_TRANSACTION_PAYMENT_DETAIL", ThisKey="ID_TRANSACTION", OtherKey="ID_TRANSACTION")]
		public EntitySet<TRANSACTION_PAYMENT_DETAIL> TRANSACTION_PAYMENT_DETAIL
		{
			get
			{
				return this._TRANSACTION_PAYMENT_DETAIL;
			}
			set
			{
				this._TRANSACTION_PAYMENT_DETAIL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_TRANSACTION_SALE", Storage="_CLIENT", ThisKey="ID_CLIENT", OtherKey="ID_CLIENT", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.TRANSACTION_SALE.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.TRANSACTION_SALE.Add(this);
						this._ID_CLIENT = value.ID_CLIENT;
					}
					else
					{
						this._ID_CLIENT = default(int);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEES_TRANSACTION_SALE", Storage="_EMPLOYEES", ThisKey="ID_EMPLOYEES", OtherKey="ID_EMPLOYEES", IsForeignKey=true)]
		public EMPLOYEES EMPLOYEES
		{
			get
			{
				return this._EMPLOYEES.Entity;
			}
			set
			{
				EMPLOYEES previousValue = this._EMPLOYEES.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEES.Entity = null;
						previousValue.TRANSACTION_SALE.Remove(this);
					}
					this._EMPLOYEES.Entity = value;
					if ((value != null))
					{
						value.TRANSACTION_SALE.Add(this);
						this._ID_EMPLOYEES = value.ID_EMPLOYEES;
					}
					else
					{
						this._ID_EMPLOYEES = default(int);
					}
					this.SendPropertyChanged("EMPLOYEES");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TRANSACTION_DETAIL(TRANSACTION_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TRANSACTION_SALE = this;
		}
		
		private void detach_TRANSACTION_DETAIL(TRANSACTION_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TRANSACTION_SALE = null;
		}
		
		private void attach_TRANSACTION_PAYMENT_DETAIL(TRANSACTION_PAYMENT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TRANSACTION_SALE = this;
		}
		
		private void detach_TRANSACTION_PAYMENT_DETAIL(TRANSACTION_PAYMENT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TRANSACTION_SALE = null;
		}
	}
}
#pragma warning restore 1591
